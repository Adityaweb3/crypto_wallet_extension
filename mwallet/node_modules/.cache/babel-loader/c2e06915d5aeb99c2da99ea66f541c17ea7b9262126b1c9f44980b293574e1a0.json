{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Indian\\\\OneDrive\\\\Desktop\\\\moralis-blueprints-main\\\\Wallet_Extension\\\\Starter\\\\mwallet\\\\src\\\\components\\\\CreateAccount.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Card } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateAccount(setWallet, setSeedPhrase) {\n  _s();\n  const [newSeedPhrase, setNewSeedPhrase] = useState(null);\n  const navigate = useNavigate();\n  function generateWallet() {\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    setNewSeedPhrase(mnemonic);\n  }\n  function setWalletAndMnemonic() {\n    setSeedPhrase(newSeedPhrase);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mnemonic\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {\n          style: {\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"After Generating your Seed Phrase don't share it with anyone . And keep it secure for recovering your wallet in future.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"frontPageButton\",\n        type: \"primary\",\n        onClick: () => generateWallet(),\n        children: \"Generate Seed Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"seedPhraseContainer\",\n        children: newSeedPhrase && /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: \"pre-wrap\"\n          },\n          children: newSeedPhrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"frontPageButton\",\n        type: \"default\"\n        //onClick={() => setWalletAndMnemonic()}\n        ,\n        children: \"Open Your New Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"frontPageBottom\",\n        onClick: () => navigate(\"/\"),\n        children: \"Back Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CreateAccount, \"MpYeApHUqdiOo3c1XDPQ9SjNV3w=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateAccount;\nexport default CreateAccount;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","Button","Card","ExclamationCircleOutlined","useNavigate","useState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateAccount","setWallet","setSeedPhrase","_s","newSeedPhrase","setNewSeedPhrase","navigate","generateWallet","mnemonic","Wallet","createRandom","phrase","setWalletAndMnemonic","children","className","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/Indian/OneDrive/Desktop/moralis-blueprints-main/Wallet_Extension/Starter/mwallet/src/components/CreateAccount.js"],"sourcesContent":["import React from \"react\";\nimport {Button , Card} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport { useNavigate } from \"react-router-dom\";\nimport {useState} from 'react' ;\nimport {ethers} from \"ethers\" ;\n\n\n\nfunction CreateAccount(setWallet, setSeedPhrase) {\n  const [newSeedPhrase, setNewSeedPhrase] = useState(null);\n\n  const navigate = useNavigate() ;\n\n  function generateWallet(){\n    const mnemonic = ethers.Wallet.createRandom().mnemonic.phrase;\n    setNewSeedPhrase(mnemonic)\n  }\n\n  function setWalletAndMnemonic() {\n    setSeedPhrase(newSeedPhrase)\n  }\n \n\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"mnemonic\">\n          <ExclamationCircleOutlined style = {{fontSize:\"20px\"}} />\n          <div>\n            After Generating your Seed Phrase don't share it with anyone . And keep it secure for recovering your wallet in future.\n          </div>\n\n          \n        </div>\n        <Button\n        className=\"frontPageButton\"\n        type = \"primary\"\n        onClick={() => generateWallet()}\n        >\n          Generate Seed Phrase\n\n        </Button>\n\n        <Card className=\"seedPhraseContainer\">\n          {newSeedPhrase && <pre style = {{whiteSpace : \"pre-wrap\"}}>{newSeedPhrase}</pre>}\n\n        </Card>\n\n        <Button\n        className=\"frontPageButton\"\n        type = \"default\"\n        //onClick={() => setWalletAndMnemonic()}\n        >\n          Open Your New Wallet\n\n        </Button>\n\n        <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}\n        >\n          Back Home \n        </p>\n\n\n        \n      </div>\n    </>\n  );\n}\n\nexport default CreateAccount;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAGC,IAAI,QAAO,MAAM;AAClC,SAAQC,yBAAyB,QAAO,mBAAmB;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,MAAM,QAAO,QAAQ;AAAE,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI/B,SAASC,aAAaA,CAACC,SAAS,EAAEC,aAAa,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,QAAQ,GAAGb,WAAW,EAAE;EAE9B,SAASc,cAAcA,CAAA,EAAE;IACvB,MAAMC,QAAQ,GAAGb,MAAM,CAACc,MAAM,CAACC,YAAY,EAAE,CAACF,QAAQ,CAACG,MAAM;IAC7DN,gBAAgB,CAACG,QAAQ,CAAC;EAC5B;EAEA,SAASI,oBAAoBA,CAAA,EAAG;IAC9BV,aAAa,CAACE,aAAa,CAAC;EAC9B;EAGA,oBACEP,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtBhB,OAAA;QAAKiB,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACvBhB,OAAA,CAACL,yBAAyB;UAACuB,KAAK,EAAI;YAACC,QAAQ,EAAC;UAAM;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACzDvB,OAAA;UAAAgB,QAAA,EAAK;QAEL;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGF,eACNvB,OAAA,CAACP,MAAM;QACPwB,SAAS,EAAC,iBAAiB;QAC3BO,IAAI,EAAG,SAAS;QAChBC,OAAO,EAAEA,CAAA,KAAMf,cAAc,EAAG;QAAAM,QAAA,EAC/B;MAGD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAETvB,OAAA,CAACN,IAAI;QAACuB,SAAS,EAAC,qBAAqB;QAAAD,QAAA,EAClCT,aAAa,iBAAIP,OAAA;UAAKkB,KAAK,EAAI;YAACQ,UAAU,EAAG;UAAU,CAAE;UAAAV,QAAA,EAAET;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE3E,eAEPvB,OAAA,CAACP,MAAM;QACPwB,SAAS,EAAC,iBAAiB;QAC3BO,IAAI,EAAG;QACP;QAAA;QAAAR,QAAA,EACC;MAGD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAETvB,OAAA;QAAGiB,SAAS,EAAC,iBAAiB;QAACQ,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAAC,GAAG,CAAE;QAAAO,QAAA,EAC3D;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAIA,iBACL;AAEP;AAACjB,EAAA,CA3DQH,aAAa;EAAA,QAGHP,WAAW;AAAA;AAAA+B,EAAA,GAHrBxB,aAAa;AA6DtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}